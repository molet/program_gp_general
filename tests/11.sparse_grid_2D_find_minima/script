#!/bin/bash

###############################################################################
# sparse_grid_2D_find_minima 
#
# Teaching 2 dimensional value data using grid sparsification and find minima
#
# Function: (sin(x)+2.0*cos(x)*cos(x))*(sin(y)+2.0*cos(y)*cos(y))
###############################################################################

# Program specifications
gp_general=../../bin/gp_general
export OMP_NUM_THREADS=8

# Variable specifications
ndim=2						# dimension
range_min=(-3.14159265359 -3.14159265359)	# minimum values
range_max=(3.14159265359 3.14159265359)		# maximum values
periodicity=(6.28318530718 6.28318530718)	# periodicities
predgird=(48 48)				# grid points for prediction
nsamples=200000					# number of training set
seed=3141592					# random seed

# GP specifications
delta=1.732					# delta (function deviation)
sigmaval=1.5					# sigma of values (deviation of values)
theta=(1.0 1.0)					# theta values (length scale)

# Sparsification specification
sparsification=grid				# equidistant grid type sparsification is applied
sparsegrid=(24 24)      		        # grid specification for sparsification

# Optimization specification
mingrid=(12 12)					# minimization grid for starting points
maxdval=0.000001                  		# max change in value
maxgrad=0.000001               			# max gradient component
maxrmsgrad=0.00001                		# max rms of gradients

# Create reference data
awk -v "predgird0=48" -v "predgird1=48" -v "range_min0=${range_min[0]}" -v "range_max0=${range_max[0]}" -v "range_min1=${range_min[1]}" -v "range_max1=${range_max[1]}" \
     'BEGIN{inc0=(range_max0-range_min0)/predgird0; inc1=(range_max1-range_min1)/predgird1}END{for(i=1; i<=predgird0; i++){x=range_min0+(i-0.5)*inc0;for(j=1; j<=predgird1; j++){y=range_min1+(j-0.5)*inc1; printf "%15.6f%15.6f%15.6f\n", x, y, (sin(x)+2.0*cos(x)*cos(x))*(sin(y)+2.0*cos(y)*cos(y))}; print ""}}' /dev/null > reference.txt

# Create training data
awk -v "nsamples=$nsamples" -v "seed=$seed" -v "range_min0=${range_min[0]}" -v "range_max0=${range_max[0]}" -v "range_min1=${range_min[1]}" -v "range_max1=${range_max[1]}" -v "sigmaval=$sigmaval" \
     'function gaussian() {pi=atan2(0,-1); return sqrt(-2*log(rand()))*cos(pi*rand())}; BEGIN{srand(seed); range0=range_max0-range_min0; range1=range_max1-range_min1; for(i=1; i<=nsamples; i++){x=range0*rand()+range_min0; y=range1*rand()+range_min1; printf "%15.6f%15.6f%15.6f\n", x, y, (sin(x)+2.0*cos(x)*cos(x))*(sin(y)+2.0*cos(y)*cos(y))+sqrt(sigmaval)*gaussian()}}' /dev/null > training.txt

# Do GP!
range=`for((i=0;i<$ndim;i++));do echo -n "${range_min[$i]} ${range_max[$i]} ";done`

echo "$gp_general -InVal -OutVal -OutMin -NDim $ndim -Delta $delta -SigmaVal $sigmaval -Theta ${theta[@]} -Periodicity ${periodicity[@]} -Range $range -PredGrid ${predgird[@]} -Verbose -Gnuplot -TrainFile training.txt -Sparsification $sparsification -SparseGrid ${sparsegrid[@]} -MinGrid ${mingrid[@]} -MaxDVal $maxdval -MaxGrad $maxgrad -MaxRMSGrad $maxrmsgrad -MinFile minima.txt"

$gp_general -InVal -OutVal -OutMin -NDim $ndim -Delta $delta -SigmaVal $sigmaval -Theta ${theta[@]} -Periodicity ${periodicity[@]} -Range $range -PredGrid ${predgird[@]} -Verbose -Gnuplot -TrainFile training.txt -Sparsification $sparsification -SparseGrid ${sparsegrid[@]} -MinGrid ${mingrid[@]} -MaxDVal $maxdval -MaxGrad $maxgrad -MaxRMSGrad $maxrmsgrad -MinFile minima.txt
