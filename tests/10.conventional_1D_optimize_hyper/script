#!/bin/bash

###############################################################################
# conventional_1D_optimize_hyper 
#
# Hyper parameter optimization based on 1 dimensional value data
#
# Function: sin(x)+2.0*cos(x)*cos(x)
###############################################################################

# Program specifications
gp_general=../../bin/gp_general
export OMP_NUM_THREADS=8

# Variable specifications
ndim=1				# dimension
range_min=(-3.14159265359)	# minimum values
range_max=(3.14159265359)	# maximum values
periodicity=(6.28318530718)	# periodicities
predgird=(48)			# grid points for prediction
nsamples=1000			# number of training set
seed=3141592			# random seed

# GP specifications
delta=1.0			# delta (function deviation) 
sigmaval=0.1			# sigma of values (deviation of values)
theta=(1.0)			# theta values (length scale)

# Optimization specification
maxdval=0.00000001		# max change in value
maxgrad=0.0001			# max gradient component
maxrmsgrad=0.001		# max rms of gradients
optdelta=0			# delta is not optimized
optsigmaval=0.000001		# relative stepsize for sigmaval
opttheta=(0.000001)		# relative stepsize for thetas

# Create reference data
awk -v "predgird=${predgird[0]}" -v "range_min=${range_min[0]}" -v "range_max=${range_max[0]}" \
     'BEGIN{inc=(range_max-range_min)/predgird}END{for(i=1; i<=predgird; i++){x=range_min+(i-0.5)*inc;printf "%15.6f%15.6f\n", x, sin(x)+2.0*cos(x)*cos(x)}}' /dev/null > reference.txt

# Create training data
awk -v "nsamples=$nsamples" -v "seed=$seed" -v "range_min=${range_min[0]}" -v "range_max=${range_max[0]}" -v "sigmaval=$sigmaval" \
     'function gaussian() {pi=atan2(0,-1); return sqrt(-2*log(rand()))*cos(pi*rand())}; BEGIN{srand(seed); range=range_max-range_min; for(i=1; i<=nsamples; i++){x=range*rand()+range_min; printf "%15.6f%15.6f\n", x, sin(x)+2.0*cos(x)*cos(x)+sqrt(sigmaval)*gaussian()}}' /dev/null > training.txt

# Do GP with nonoptimized sigmaval and theta parameters!
range=`for((i=0;i<$ndim;i++));do echo -n "${range_min[$i]} ${range_max[$i]} ";done`

echo "$gp_general -InVal -OutVal -NDim $ndim -Delta $delta -SigmaVal 0.01 -Theta 10 -Periodicity ${periodicity[@]} -Range $range -PredGrid ${predgird[@]} -Verbose -Gnuplot -TrainFile training.txt -PredFile prediction_nonopt.txt"

$gp_general -InVal -OutVal -NDim $ndim -Delta $delta -SigmaVal 0.01 -Theta 10 -Periodicity ${periodicity[@]} -Range $range -PredGrid ${predgird[@]} -Verbose -Gnuplot -TrainFile training.txt -PredFile prediction_nonopt.txt

# Do GP with optimization!
range=`for((i=0;i<$ndim;i++));do echo -n "${range_min[$i]} ${range_max[$i]} ";done`

echo "$gp_general -InVal -OutVal -OutOpt -NDim $ndim -Delta $delta -SigmaVal 0.01 -Theta 10 -Periodicity ${periodicity[@]} -Range $range -PredGrid ${predgird[@]} -Verbose -Gnuplot -TrainFile training.txt -PredFile prediction_opt.txt -OptDelta $optdelta -OptSigmaVal $optsigmaval -OptTheta ${opttheta[@]} -MaxDVal $maxdval -MaxGrad $maxgrad -MaxRMSGrad $maxrmsgrad"

$gp_general -InVal -OutVal -OutOpt -NDim $ndim -Delta $delta -SigmaVal 0.01 -Theta 10 -Periodicity ${periodicity[@]} -Range $range -PredGrid ${predgird[@]} -Verbose -Gnuplot -TrainFile training.txt -PredFile prediction_opt.txt -OptDelta $optdelta -OptSigmaVal $optsigmaval -OptTheta ${opttheta[@]} -MaxDVal $maxdval -MaxGrad $maxgrad -MaxRMSGrad $maxrmsgrad -OptFile opt.txt
